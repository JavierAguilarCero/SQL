/*
ESTA INSTRUCCIÓN SQL CREA UN NUEVO USUARIO LLAMADO 'RIA' EN LA BASE DE DATOS Y LE ASIGNA LA CONTRASEÑA 'RIA123'.
*/
CREATE USER ria
WITH PASSWORD 'ria123'
/*
ESTA INSTRUCCIÓN SQL CREA UN USUARIO LLAMADO 'MIKE' EN LA BASE DE DATOS Y LE ASIGNA LA CONTRASEÑA 'MIKE123'.
*/
CREATE USER mike
WITH PASSWORD 'mike123'
/*
ESTA INSTRUCCIÓN SQL CREA UN ROL LLAMADO 'READ_ONLY' EN LA BASE DE DATOS. ESTE ROL ESTÁ DISEÑADO PARA SER ASIGNADO A USUARIOS QUE SOLO NECESITAN PERMISOS DE LECTURA,
COMO CONSULTAR DATOS SIN MODIFICARLOS.
*/
CREATE ROLE read_only
/*
ESTA INSTRUCCIÓN SQL CREA UN ROL LLAMADO 'READ_UPDATE' EN LA BASE DE DATOS. ESTE ROL ESTÁ PENSADO PARA USUARIOS QUE NECESITAN PERMISOS DE LECTURA Y ACTUALIZACIÓN,
PERMITIENDO CONSULTAR Y MODIFICAR DATOS, PERO NO ELIMINAR NI INSERTAR NUEVOS REGISTROS.
*/
CREATE ROLE read_update
/*
ESTA INSTRUCCIÓN SQL OTORGA AL ROL 'READ_ONLY' EL PERMISO DE USO SOBRE EL ESQUEMA 'PUBLIC'. ESTO PERMITE QUE LOS USUARIOS ASIGNADOS A ESTE ROL PUEDAN ACCEDER A LOS
OBJETOS DENTRO DEL ESQUEMA, COMO TABLAS Y VISTAS, SIN NECESARIAMENTE TENER PERMISOS PARA MODIFICARLOS.
*/
GRANT USAGE
ON SCHEMA public
TO read_only
/*
ESTA INSTRUCCIÓN SQL OTORGA AL ROL 'READ_ONLY' EL PERMISO DE REALIZAR CONSULTAS (SELECT) SOBRE TODAS LAS TABLAS DEL ESQUEMA 'PUBLIC'. ESTO PERMITE QUE LOS USUARIOS CON
ESTE ROL PUEDAN VER LOS DATOS SIN MODIFICARLOS.
*/
GRANT SELECT
ON ALL TABLES IN SCHEMA public
TO read_only;
/*
ESTA INSTRUCCIÓN SQL ASIGNA EL ROL 'READ_ONLY' AL ROL 'READ_UPDATE'. CON ESTO, 'READ_UPDATE' HEREDA TODOS LOS PRIVILEGIOS DE 'READ_ONLY', PERMITIENDO A LOS USUARIOS CON
EL ROL 'READ_UPDATE' REALIZAR CONSULTAS A LAS TABLAS DEL ESQUEMA 'PUBLIC' ADEMÁS DE SUS PROPIOS PRIVILEGIOS.
*/
GRANT read_only
TO read_update
/*
ESTA INSTRUCCIÓN SQL OTORGA AL ROL 'READ_UPDATE' TODOS LOS PRIVILEGIOS (SELECT, INSERT, UPDATE, DELETE, ETC.) SOBRE TODAS LAS TABLAS DEL ESQUEMA 'PUBLIC'. ESTO PERMITE
QUE LOS USUARIOS CON ESTE ROL PUEDAN REALIZAR CUALQUIER OPERACIÓN SOBRE LOS DATOS, AUNQUE POSTERIORMENTE SE PUEDEN REVOCAR PRIVILEGIOS ESPECÍFICOS SI ES NECESARIO.
*/
GRANT ALL
ON ALL TABLES IN SCHEMA public
TO read_update
/*
ESTA INSTRUCCIÓN SQL REVOCa LOS PRIVILEGIOS DE ELIMINACIÓN (DELETE) E INSERCIÓN (INSERT) SOBRE TODAS LAS TABLAS DEL ESQUEMA 'PUBLIC' AL ROL 'READ_UPDATE'.
*/
REVOKE DELETE, INSERT
ON ALL TABLES IN SCHEMA public
FROM read_update
/*
ESTA INSTRUCCIÓN SQL ASIGNA EL ROL 'READ_UPDATE' AL USUARIO 'RIA'. COMO RESULTADO, 'RIA' HEREDA TODOS LOS PRIVILEGIOS DEFINIDOS EN ESE ROL, INCLUYENDO LA CAPACIDAD DE
CONSULTAR Y ACTUALIZAR DATOS EN LAS TABLAS DEL ESQUEMA 'PUBLIC'.
*/
GRANT read_update
TO ria
/*
ESTA INSTRUCCIÓN SQL ELIMINA EL ROL LLAMADO 'MIKE' DE LA BASE DE DATOS. ES IMPORTANTE ASEGURARSE DE QUE EL ROL NO TENGA DEPENDENCIAS NI PRIVILEGIOS ASIGNADOS ANTES DE
EJECUTAR ESTA OPERACIÓN PARA EVITAR ERRORES.
*/
DROP ROLE mike
/*
ESTA INSTRUCCIÓN SQL ELIMINA EL ROL 'READ_UPDATE' DE LA BASE DE DATOS. ANTES DE EJECUTAR ESTA OPERACIÓN, ES NECESARIO ASEGURARSE DE QUE EL ROL NO TENGA DEPENDENCIAS
ACTIVAS NI PRIVILEGIOS ASIGNADOS A OBJETOS, PARA EVITAR ERRORES DURANTE LA ELIMINACIÓN.
*/
DROP ROLE read_update
/*
ESTA INSTRUCCIÓN SQL ELIMINA TODOS LOS OBJETOS Y PRIVILEGIOS PROPIEDAD DEL ROL 'READ_UPDATE' EN LA BASE DE DATOS. ES UN PASO PREVIO NECESARIO ANTES DE ELIMINAR EL ROL 
PARA ASEGURARSE DE QUE NO QUEDEN DEPENDENCIAS ACTIVAS QUE IMPIDAN SU BORRADO.
*/
DROP OWNED BY read_update
/*
ESTA INSTRUCCIÓN SQL ELIMINA DEFINITIVAMENTE EL ROL 'READ_UPDATE' DE LA BASE DE DATOS. DEBE EJECUTARSE DESPUÉS DE HABER ELIMINADO TODAS SUS DEPENDENCIAS Y OBJETOS
ASOCIADOS MEDIANTE COMANDOS COMO 'DROP OWNED BY', PARA EVITAR CONFLICTOS O ERRORES DURANTE LA ELIMINACIÓN.
*/
DROP ROLE read_update
/*
ESTA INSTRUCCIÓN SQL CREA UN NUEVO USUARIO LLAMADO 'MIA' EN LA BASE DE DATOS Y LE ASIGNA LA CONTRASEÑA 'MIA123'. ESTE USUARIO PODRÁ SER ASIGNADO A ROLES Y RECIBIR
PRIVILEGIOS SEGÚN LAS NECESIDADES DE ADMINISTRACIÓN Y SEGURIDAD DEFINIDAS EN EL SISTEMA.
*/
CREATE USER mia
WITH PASSWORD 'mia123'
/*
ESTA INSTRUCCIÓN SQL CREA UN NUEVO ROL LLAMADO 'ANALYST_EMP' EN LA BASE DE DATOS. ESTE ROL PUEDE SER CONFIGURADO POSTERIORMENTE CON PRIVILEGIOS ESPECÍFICOS, COMO CONSULTA
DE DATOS, ACCESO A VISTAS ANALÍTICAS O PERMISOS LIMITADOS SEGÚN LAS NECESIDADES DE LOS ANALISTAS DE EMPLEADOS.
*/
CREATE ROLE analyst_emp
/*
ESTA INSTRUCCIÓN SQL OTORGA AL ROL 'ANALYST_EMP' EL PRIVILEGIO DE REALIZAR CONSULTAS (SELECT) SOBRE TODAS LAS TABLAS DEL ESQUEMA 'PUBLIC'. ESTO PERMITE QUE LOS USUARIOS
ASIGNADOS A ESTE ROL PUEDAN ACCEDER Y ANALIZAR DATOS SIN MODIFICARLOS, LO CUAL ES IDEAL PARA FUNCIONES DE ANÁLISIS.
*/
GRANT SELECT
ON ALL TABLES IN SCHEMA public
TO analyst_emp
/*
ESTA INSTRUCCIÓN SQL OTORGA AL ROL 'ANALYST_EMP' LOS PRIVILEGIOS DE INSERCIÓN (INSERT) Y ACTUALIZACIÓN (UPDATE) SOBRE LA TABLA 'EMPLOYEES'. ESTO PERMITE QUE LOS USUARIOS
CON ESTE ROL PUEDAN AGREGAR NUEVOS REGISTROS Y MODIFICAR DATOS EXISTENTES EN LA TABLA DE EMPLEADOS, ADEMÁS DE CONSULTARLA SI YA TIENEN EL PRIVILEGIO DE SELECT.
*/
GRANT INSERT,UPDATE
ON employees
TO analyst_emp
/*
ESTA INSTRUCCIÓN SQL MODIFICA EL ROL 'ANALYST_EMP' PARA OTORGARLE EL PRIVILEGIO DE CREAR BASES DE DATOS (CREATEDB). CON ESTE PERMISO, LOS USUARIOS ASIGNADOS A ESTE ROL
PODRÁN CREAR NUEVAS BASES DE DATOS EN EL SISTEMA, LO CUAL ES ÚTIL PARA FUNCIONES AVANZADAS DE ADMINISTRACIÓN O ANÁLISIS INDEPENDIENTE.
*/
ALTER ROLE analyst_emp CREATEDB
/*
ESTA INSTRUCCIÓN SQL ASIGNA EL ROL 'ANALYST_EMP' AL USUARIO 'MIA'. COMO RESULTADO, 'MIA' HEREDA TODOS LOS PRIVILEGIOS DEFINIDOS EN ESE ROL, INCLUYENDO LA CAPACIDAD DE
CONSULTAR, INSERTAR Y ACTUALIZAR DATOS EN LA TABLA 'EMPLOYEES', ASÍ COMO CREAR NUEVAS BASES DE DATOS.
*/
GRANT analyst_emp TO mia