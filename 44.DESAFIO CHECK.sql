/*
ESTE CÓDIGO SQL CREA UNA TABLA LLAMADA 'SONGS' PARA ALMACENAR INFORMACIÓN DE CANCIONES. INCLUYE LOS CAMPOS: 'SONG_ID' COMO CLAVE PRIMARIA AUTOINCREMENTAL, 'SONG_NAME' COMO
NOMBRE DE LA CANCIÓN (OBLIGATORIO), 'GENRE' CON UN VALOR POR DEFECTO DE 'NOT DEFINED', 'PRICE' CON UNA RESTRICCIÓN QUE EXIGE UN VALOR MÍNIMO DE 1.99, Y 'RELEASE_DATE' CON
UNA CONDICIÓN QUE LIMITA LA FECHA DE LANZAMIENTO ENTRE EL 1 DE ENERO DE 1950 Y LA FECHA ACTUAL.
*/
CREATE TABLE songs
	(
	song_id SERIAL PRIMARY KEY,
	song_name VARCHAR(30) NOT NULL,
	genre VARCHAR(30) DEFAULT 'Not defined',
	price NUMERIC(4,2) CHECK(price >= 1.99),
	release_date DATE CONSTRAINT date_check CHECK(release_date BETWEEN '1950-01-01' AND CURRENT_DATE)
	)
/*
ESTE CÓDIGO SQL RECUPERA TODOS LOS REGISTROS Y COLUMNAS DE LA TABLA 'SONGS', MOSTRANDO LA INFORMACIÓN COMPLETA DE CADA CANCIÓN ALMACENADA EN DICHA TABLA.
*/
SELECT
	*
FROM
	songs
/*
ESTE CÓDIGO SQL INSERTA UN NUEVO REGISTRO EN LA TABLA 'SONGS' CON LOS SIGUIENTES DATOS: NOMBRE DE LA CANCIÓN 'SQL SONG', PRECIO 0.99 Y FECHA DE LANZAMIENTO '2020-07-01'.
*/
INSERT INTO songs
	(song_name,
	price,
	release_date)
VALUES
	('SQL song',
	0.99,
	'2020-07-01')
/*
ESTE CÓDIGO SQL ELIMINA LA RESTRICCIÓN LLAMADA 'SONGS_PRICE_CHECK' DE LA TABLA 'SONGS'.
*/
ALTER TABLE songs
DROP CONSTRAINT songs_price_check
/*
ESTE CÓDIGO SQL AGREGA UNA NUEVA RESTRICCIÓN A LA TABLA 'SONGS' LLAMADA 'SONG_PRICE_CHECK', LA CUAL ESTABLECE QUE EL VALOR DE LA COLUMNA 'PRICE' DEBE SER MAYOR O IGUAL A
0.99.
*/
ALTER TABLE songs
ADD CONSTRAINT song_price_check CHECK(price >= 0.99)